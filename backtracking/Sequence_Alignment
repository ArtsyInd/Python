def needleman_wunsch(seq1, seq2, match=1, mismatch=-1, gap=-1):
    # Create a matrix to store the alignment scores
    m, n = len(seq1), len(seq2)
    score_matrix = [[0] * (n + 1) for _ in range(m + 1)]

    # Initialize the matrix
    for i in range(m + 1):
        score_matrix[i][0] = i * gap
    for j in range(n + 1):
        score_matrix[0][j] = j * gap

    # Fill in the matrix using dynamic programming
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            match_score = score_matrix[i - 1][j - 1] + (match if seq1[i - 1] == seq2[j - 1] else mismatch)
            delete_score = score_matrix[i - 1][j] + gap
            insert_score = score_matrix[i][j - 1] + gap
            score_matrix[i][j] = max(match_score, delete_score, insert_score)

    # Backtrack to find the alignment
    alignment_seq1 = []
    alignment_seq2 = []
    i, j = m, n
    while i > 0 and j > 0:
        current_score = score_matrix[i][j]
        if current_score == score_matrix[i - 1][j - 1] + (match if seq1[i - 1] == seq2[j - 1] else mismatch):
            alignment_seq1.insert(0, seq1[i - 1])
            alignment_seq2.insert(0, seq2[j - 1])
            i -= 1
            j -= 1
        elif current_score == score_matrix[i - 1][j] + gap:
            alignment_seq1.insert(0, seq1[i - 1])
            alignment_seq2.insert(0, "-")
            i -= 1
        else:
            alignment_seq1.insert(0, "-")
            alignment_seq2.insert(0, seq2[j - 1])
            j -= 1

    while i > 0:
        alignment_seq1.insert(0, seq1[i - 1])
        alignment_seq2.insert(0, "-")
        i -= 1

    while j > 0:
        alignment_seq1.insert(0, "-")
        alignment_seq2.insert(0, seq2[j - 1])
        j -= 1

    return ''.join(alignment_seq1), ''.join(alignment_seq2), score_matrix[m][n]

# Example usage:
sequence1 = "AGTACGCA"
sequence2 = "TATGC"
aligned_seq1, aligned_seq2, alignment_score = needleman_wunsch(sequence1, sequence2)
print("Aligned Sequence 1:", aligned_seq1)
print("Aligned Sequence 2:", aligned_seq2)
print("Alignment Score:", alignment_score)
